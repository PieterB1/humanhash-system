apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: greeting-cluster
  namespace: default
spec:
  rayVersion: '2.10.0'
  headGroupSpec:
    template:
      spec:
        initContainers:
          - name: copy-script
            image: busybox
            command:
              - "sh"
              - "-c"
              - "mkdir -p /home/ray/script && cp /config/greeting_service.py /home/ray/script/ && chown -R 1000:1000 /home/ray/script && chmod -R 755 /home/ray/script"
            volumeMounts:
              - name: script-volume
                mountPath: "/config"
        containers:
          - name: ray-head
            image: rayproject/ray:2.10.0-aarch64
            ports:
              - containerPort: 6379
                name: gcs-server
              - containerPort: 8265
                name: dashboard
              - containerPort: 8080
                name: metrics
              - containerPort: 8000
                name: serve
              - containerPort: 10001
                name: client
            resources:
              limits:
                cpu: 500m
                memory: 2Gi
              requests:
                cpu: 100m
                memory: 512Mi
            env:
              - name: RAY_LOG_LEVEL
                value: "DEBUG"
              - name: RAY_LOG_TO_STDERR
                value: "1"
              - name: PATH
                value: "/home/ray/anaconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
              - name: RAY_memory_usage_threshold
                value: "0.85"
            command:
              - "/bin/bash"
              - "-c"
              - "ulimit -n 65536; /home/ray/anaconda3/bin/ray start --head --block --port=6379 --dashboard-port=8265 --dashboard-host=0.0.0.0 --object-store-memory=104857600 --num-cpus=1 & echo 'Starting greeting_service.py' && python /home/ray/script/greeting_service.py || { echo 'Script failed'; tail -f /dev/null; }"
            livenessProbe:
              tcpSocket:
                port: 8265
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 10
              failureThreshold: 5
            readinessProbe:
              tcpSocket:
                port: 8265
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 10
              failureThreshold: 5
            volumeMounts:
              - name: script-volume
                mountPath: /home/ray/script
        volumes:
          - name: script-volume
            configMap:
              name: greeting-script
  workerGroupSpecs:
    - groupName: small-group
      minReplicas: 1
      maxReplicas: 1
      template:
        spec:
          initContainers:
            - name: copy-script
              image: busybox
              command:
                - "sh"
                - "-c"
                - "mkdir -p /home/ray/script && cp /config/greeting_service.py /home/ray/script/ && chown -R 1000:1000 /home/ray/script && chmod -R 755 /home/ray/script"
              volumeMounts:
                - name: script-volume
                  mountPath: "/config"
            - name: gcs-wait
              image: curlimages/curl:8.10.1
              command:
                - "/bin/sh"
                - "-c"
                - |
                  SECONDS=0
                  while true; do
                    if (( SECONDS <= 120 )); then
                      if curl -s http://greeting-cluster-head-svc.default.svc.cluster.local:8265/api/gcs_healthz; then
                        echo "GCS is ready."
                        break
                      fi
                      echo "$SECONDS seconds elapsed: Waiting for GCS to be ready."
                      sleep 5
                    else
                      if curl -s http://greeting-cluster-head-svc.default.svc.cluster.local:8265/api/gcs_healthz; then
                        echo "GCS is ready. Any error messages above can be safely ignored."
                        break
                      fi
                      echo "$SECONDS seconds elapsed: Still waiting for GCS to be ready. For troubleshooting, refer to the FAQ at https://github.com/ray-project/kuberay/blob/master/docs/guidance/FAQ.md."
                      exit 1
                    fi
                  done
              env:
                - name: RAY_LOG_LEVEL
                  value: "DEBUG"
                - name: RAY_LOG_TO_STDERR
                  value: "1"
                - name: FQ_RAY_IP
                  value: "greeting-cluster-head-svc.default.svc.cluster.local"
                - name: RAY_IP
                  value: "greeting-cluster-head-svc"
                - name: PATH
                  value: "/usr/local/bin:/usr/bin:/bin"
                - name: RAY_memory_usage_threshold
                  value: "0.85"
          containers:
            - name: ray-worker
              image: rayproject/ray:2.10.0-aarch64
              ports:
                - containerPort: 52365
                  name: dashboard-agent
              resources:
                limits:
                  cpu: 500m
                  memory: 2Gi
                requests:
                  cpu: 100m
                  memory: 512Mi
              env:
                - name: RAY_LOG_LEVEL
                  value: "DEBUG"
                - name: RAY_LOG_TO_STDERR
                  value: "1"
                - name: PATH
                  value: "/home/ray/anaconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                - name: RAY_memory_usage_threshold
                  value: "0.85"
              command:
                - "/bin/bash"
                - "-c"
                - "ulimit -n 65536; /home/ray/anaconda3/bin/ray start --address=greeting-cluster-head-svc.default.svc.cluster.local:6379 --block --dashboard-agent-listen-port=52365 --object-store-memory=104857600 --num-cpus=1"
              livenessProbe:
                tcpSocket:
                  port: 52365
                initialDelaySeconds: 30
                periodSeconds: 10
                timeoutSeconds: 10
                failureThreshold: 5
              readinessProbe:
                tcpSocket:
                  port: 52365
                initialDelaySeconds: 30
                periodSeconds: 10
                timeoutSeconds: 10
                failureThreshold: 5
              volumeMounts:
                - name: script-volume
                  mountPath: /home/ray/script
          volumes:
            - name: script-volume
              configMap:
                name: greeting-script
